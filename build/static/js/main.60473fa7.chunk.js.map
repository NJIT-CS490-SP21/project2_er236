{"version":3,"sources":["logo.svg","Components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Board","useState","board","setBoard","socket","useRef","io","send","num","value","item","slice","console","log","emit","useEffect","on","data","className","map","items","index","func","player","Box","props","values","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,qDCMFA,EAAM,WAAK,IAAD,EACIC,mBAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAD9C,mBACZC,EADY,KACNC,EADM,KAIbC,GADSC,iBAAO,QACPC,OAUf,SAASC,EAAKC,EAAIC,GACd,IAAIC,EAAK,GAAD,mBAAKR,EAAMS,MAAM,EAAEH,IAAnB,CAAwBC,GAAxB,YAAiCP,EAAMS,MAAMH,EAAI,KACzDI,QAAQC,IAAI,OAAOH,GACnBP,EAASO,GACTN,EAAOU,KAAK,OAAOJ,GAEvB,OAdAK,qBAAU,WACNX,EAAOY,GAAG,QAAO,SAACC,GACdL,QAAQC,IAAI,wBACZD,QAAQC,IAAII,GACZd,EAASc,QAEf,IASE,qBAAKC,UAAU,QAAf,SACKhB,EAAMiB,KAAI,SAACC,EAAMC,GAAU,OAAO,cAAC,EAAD,CAAMA,MAAOA,EAAQC,KAAMf,EAAME,MAAOP,EAAMmB,GAAQE,OAAQ,UAKvGC,EAAI,SAACC,GACP,IAAMC,EAAO,CAAC,IAAI,KAMlB,OAAO,qBAAKC,QALC,WACS,MAAdF,EAAMhB,OACNgB,EAAMH,KAAKG,EAAMJ,MAAMK,EAAOD,EAAMF,UAGrC,SAAwBE,EAAMhB,SC5B1BmB,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60473fa7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./board.css\"\nimport { useState,useRef,useEffect  } from 'react'\nimport io from 'socket.io-client';\n\n\n\nexport const Board=()=>{\n    const [board,setBoard]=useState([\"_\",\"_\",\"_\",\"_\",\"_\",\"_\",\"_\",\"_\",\"_\"])\n    const player=0;\n    const inputref=useRef(\"null\");\n    const socket = io();\n    \n    useEffect(()=>{\n        socket.on('chat',(data)=>{\n            console.log('Chat event received!');\n            console.log(data)\n            setBoard(data)\n        });\n    },[])\n    \n    function send(num,value){ \n        var item=[...board.slice(0,num),value,...board.slice(num+1)]\n        console.log(\"item\",item);\n        setBoard(item)\n        socket.emit('chat',item);\n    }\n    return(\n        <div className=\"board\">\n            {board.map((items,index)=>{ return <Box  index={index}  func={send} value={board[index]} player={1}/>\n            })}\n        </div>\n    )\n}\nconst Box=(props)=>{\n    const values=[\"X\",\"O\"]\n    const change=()=>{\n        if (props.value===\"_\"){\n            props.func(props.index,values[props.player])\n        }\n    }\n    return <div onClick={change} >{props.value}</div>\n\n}\n      \n\n","import logo from './logo.svg';\nimport './App.css';\nimport {Board} from './Components/Board.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}